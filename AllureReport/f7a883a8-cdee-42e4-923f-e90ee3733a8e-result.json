{"name": "test_lambdatest_two_input_fields[30-40-70]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[text()='Get values']\"}\n  (Session info: chrome=122.0.6261.128); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF78A78AD02+56930]\n\t(No symbol) [0x00007FF78A6FF602]\n\t(No symbol) [0x00007FF78A5B42E5]\n\t(No symbol) [0x00007FF78A5F98ED]\n\t(No symbol) [0x00007FF78A5F9A2C]\n\t(No symbol) [0x00007FF78A63A967]\n\t(No symbol) [0x00007FF78A61BCDF]\n\t(No symbol) [0x00007FF78A6381E2]\n\t(No symbol) [0x00007FF78A61BA43]\n\t(No symbol) [0x00007FF78A5ED438]\n\t(No symbol) [0x00007FF78A5EE4D1]\n\tGetHandleVerifier [0x00007FF78AB06F8D+3711213]\n\tGetHandleVerifier [0x00007FF78AB604CD+4077101]\n\tGetHandleVerifier [0x00007FF78AB5865F+4044735]\n\tGetHandleVerifier [0x00007FF78A829736+706710]\n\t(No symbol) [0x00007FF78A70B8DF]\n\t(No symbol) [0x00007FF78A706AC4]\n\t(No symbol) [0x00007FF78A706C1C]\n\t(No symbol) [0x00007FF78A6F68D4]\n\tBaseThreadInitThunk [0x00007FF8EEAE257D+29]\n\tRtlUserThreadStart [0x00007FF8F010AA58+40]", "trace": "num1 = '30', num2 = '40', expected_total = '70'\n\n    @pytest.mark.parametrize(\"num1, num2, expected_total\",\n                            [\n                             (\"25\", \"25\", \"50\"),\n                             (\"10\", \"10\", \"30\"),\n                             (\"30\", \"40\", \"70\")\n                            ])\n    def test_lambdatest_two_input_fields(num1, num2, expected_total):\n      driver = webdriver.Chrome()\n      driver.maximize_window()\n      driver.get(\"https://www.lambdatest.com/selenium-playground/simple-form-demo\")\n      driver.find_element(By.ID, \"sum1\").send_keys(num1)\n      driver.find_element(By.ID, \"sum2\").send_keys(num2)\n>     driver.find_element(By.XPATH,\n        \"//button[text()='Get values']\").click()\n\nDemoPytest\\test_parameters_1.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000228B8B98AA0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF78A6F68D4]\\\\n\\\\tBaseThreadInitThunk [0x00007FF8EEAE257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF8F010AA58+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[text()='Get values']\"}\nE         (Session info: chrome=122.0.6261.128); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF78A78AD02+56930]\nE       \t(No symbol) [0x00007FF78A6FF602]\nE       \t(No symbol) [0x00007FF78A5B42E5]\nE       \t(No symbol) [0x00007FF78A5F98ED]\nE       \t(No symbol) [0x00007FF78A5F9A2C]\nE       \t(No symbol) [0x00007FF78A63A967]\nE       \t(No symbol) [0x00007FF78A61BCDF]\nE       \t(No symbol) [0x00007FF78A6381E2]\nE       \t(No symbol) [0x00007FF78A61BA43]\nE       \t(No symbol) [0x00007FF78A5ED438]\nE       \t(No symbol) [0x00007FF78A5EE4D1]\nE       \tGetHandleVerifier [0x00007FF78AB06F8D+3711213]\nE       \tGetHandleVerifier [0x00007FF78AB604CD+4077101]\nE       \tGetHandleVerifier [0x00007FF78AB5865F+4044735]\nE       \tGetHandleVerifier [0x00007FF78A829736+706710]\nE       \t(No symbol) [0x00007FF78A70B8DF]\nE       \t(No symbol) [0x00007FF78A706AC4]\nE       \t(No symbol) [0x00007FF78A706C1C]\nE       \t(No symbol) [0x00007FF78A6F68D4]\nE       \tBaseThreadInitThunk [0x00007FF8EEAE257D+29]\nE       \tRtlUserThreadStart [0x00007FF8F010AA58+40]\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "parameters": [{"name": "num1", "value": "'30'"}, {"name": "num2", "value": "'40'"}, {"name": "expected_total", "value": "'70'"}], "start": 1710442292928, "stop": 1710442294995, "uuid": "774bc915-1619-4a7a-9057-e91c85816864", "historyId": "c1cca13d673785ed1eb420a988475cd7", "testCaseId": "5299d554aed4170526d119ef84758389", "fullName": "DemoPytest.test_parameters_1#test_lambdatest_two_input_fields", "labels": [{"name": "parentSuite", "value": "DemoPytest"}, {"name": "suite", "value": "test_parameters_1"}, {"name": "host", "value": "LAPTOP-U9R56RQR"}, {"name": "thread", "value": "15700-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "DemoPytest.test_parameters_1"}]}